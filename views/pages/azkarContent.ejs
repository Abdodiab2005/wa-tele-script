<div class="container my-5">
  <div class="row mb-5">
    <div class="col-lg-8 mx-auto">
      <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Daily Azkar</h5>
          <div class="btn-group">
            <button id="morning-btn" class="btn btn-outline-light active">Morning Azkar</button>
            <button id="evening-btn" class="btn btn-outline-light">Evening Azkar</button>
          </div>
        </div>
        <div class="card-body">
          <div id="azkar-content" class="mb-3">
            <!-- Azkar content will be loaded here -->
            <div class="placeholder-glow">
              <p class="placeholder col-12"></p>
              <p class="placeholder col-12"></p>
              <p class="placeholder col-10"></p>
            </div>
          </div>
          <div class="text-end">
            <button id="edit-azkar-btn" class="btn btn-primary">
              <i class="bi bi-pencil-square"></i> Edit Content
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-8 mx-auto">
      <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
          <h5 class="mb-0">Prayer Timings</h5>
          <button id="refresh-timings-btn" class="btn btn-sm btn-outline-light">
            <i class="bi bi-arrow-clockwise"></i> Update Timings
          </button>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-bordered table-hover">
              <thead class="table-light">
                <tr>
                  <th>Fajr</th>
                  <th>Sunrise</th>
                  <th>Dhuhr</th>
                  <th>Asr</th>
                  <th>Maghrib</th>
                  <th>Isha</th>
                </tr>
              </thead>
              <tbody id="prayer-timings-body">
                <tr>
                  <td colspan="6" class="text-center">Loading prayer timings...</td>
                </tr>
              </tbody>
            </table>
          </div>

          <div class="accordion mt-3" id="additionalTimingsAccordion">
            <div class="accordion-item">
              <h2 class="accordion-header">
                <button
                  class="accordion-button collapsed"
                  type="button"
                  data-bs-toggle="collapse"
                  data-bs-target="#additionalTimings"
                  aria-expanded="false"
                  aria-controls="additionalTimings">
                  Additional Timings
                </button>
              </h2>
              <div
                id="additionalTimings"
                class="accordion-collapse collapse"
                data-bs-parent="#additionalTimingsAccordion">
                <div class="accordion-body">
                  <div class="row" id="additional-timings-container">
                    <!-- Additional timings will be loaded here -->
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Edit Azkar Modal -->
<div class="modal fade" id="editAzkarModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Azkar Content</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="edit-azkar-form">
          <div class="mb-3">
            <textarea class="form-control" id="azkar-edit-content" rows="10"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="save-azkar-btn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-body text-center p-4">
        <div class="spinner-border text-primary mb-3" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
        <h5 id="loading-message">Processing your request...</h5>
        <p class="text-muted" id="loading-details"></p>
      </div>
    </div>
  </div>
</div>

<!-- Result Modal -->
<div class="modal fade" id="resultModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="result-title">Status</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="result-body">
        <!-- Content will be dynamically added here -->
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Bootstrap JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
  // Initialize Bootstrap components
  const loadingModal = new bootstrap.Modal(document.getElementById("loadingModal"));
  const resultModal = new bootstrap.Modal(document.getElementById("resultModal"));
  const editAzkarModal = new bootstrap.Modal(document.getElementById("editAzkarModal"));

  // Current active azkar type
  let currentAzkarType = "morning";

  // Load azkar content when page loads
  document.addEventListener("DOMContentLoaded", function () {
    loadAzkarContent(currentAzkarType);
    loadPrayerTimings();
  });

  // Toggle between morning and evening azkar
  document.getElementById("morning-btn").addEventListener("click", function () {
    if (currentAzkarType !== "morning") {
      currentAzkarType = "morning";
      this.classList.add("active");
      document.getElementById("evening-btn").classList.remove("active");
      loadAzkarContent(currentAzkarType);
    }
  });

  document.getElementById("evening-btn").addEventListener("click", function () {
    if (currentAzkarType !== "evening") {
      currentAzkarType = "evening";
      this.classList.add("active");
      document.getElementById("morning-btn").classList.remove("active");
      loadAzkarContent(currentAzkarType);
    }
  });

  // Edit azkar button
  document.getElementById("edit-azkar-btn").addEventListener("click", function () {
    document.getElementById("azkar-edit-content").value = document.getElementById("azkar-content").textContent.trim();
    editAzkarModal.show();
  });

  // Save azkar changes
  document.getElementById("save-azkar-btn").addEventListener("click", async function () {
    try {
      const content = document.getElementById("azkar-edit-content").value.trim();
      console.log(`Saving azkar content:`, content);

      if (!content) {
        alert("Please enter content for the azkar");
        return;
      }

      // Show loading modal
      document.getElementById("loading-message").textContent = "Saving changes...";
      document.getElementById("loading-details").textContent = "Please wait";
      // Blur the save button before hiding modal to prevent accessibility issues
      document.getElementById("save-azkar-btn").blur();
      loadingModal.show();
      editAzkarModal.hide();

      // Send data to server
      const response = await fetch(`/azkar/edit/${currentAzkarType}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ content }),
      });
      console.log(`Response from server:`, response);
      if (!response.ok) {
        throw new Error("Network response was not ok");
      }
      const data = await response.json();
      loadingModal.hide();

      if (response.ok) {
        document.getElementById("result-title").textContent = "Success";
        document.getElementById("result-body").innerHTML = `
                    <div class="alert alert-success">Azkar content updated successfully!</div>
                `;

        // Reload azkar content
        loadAzkarContent(currentAzkarType);
        // Removed duplicate loadingModal.hide() here
      } else {
        throw new Error(data.message || "Failed to update content");
      }

      resultModal.show();
    } catch (error) {
      console.error("Error updating azkar:", error);
      loadingModal.hide();

      document.getElementById("result-title").textContent = "Error";
      document.getElementById("result-body").innerHTML = `
                <div class="alert alert-danger">${error.message || "Failed to update content. Please try again."}</div>
            `;
      resultModal.show();
    }
  });

  // Refresh prayer timings
  document.getElementById("refresh-timings-btn").addEventListener("click", function () {
    loadPrayerTimings();
  });

  // Function to load azkar content
  async function loadAzkarContent(type) {
    try {
      document.getElementById("azkar-content").innerHTML = `
                <div class="placeholder-glow">
                    <p class="placeholder col-12"></p>
                    <p class="placeholder col-12"></p>
                    <p class="placeholder col-10"></p>
                </div>
            `;

      // This is a placeholder - you'll need to create this endpoint
      const response = await fetch(`/azkar/${type}`);
      console.log(`Fetching azkar content from /azkar/${type}\nResponse:`, response);
      const data = await response.json();
      console.log(`Azkar content response:`, data);
      if (response.ok) {
        document.getElementById("azkar-content").innerHTML = formatAzkarContent(data);
        loadingModal.hide();
      } else {
        loadingModal.hide(); // Ensure loading modal is hidden on error
        throw new Error(data.message || "Failed to load azkar content");
      }
    } catch (error) {
      console.error(`Error loading ${type} azkar:`, error);
      loadingModal.hide(); // Ensure loading modal is hidden on error
      document.getElementById("azkar-content").innerHTML = `
                <div class="alert alert-danger">Failed to load azkar content. Please try again later.</div>
            `;
    }
  }

  // Format azkar content for display (you may need to adjust this based on your data format)
  function formatAzkarContent(content) {
    // Simple formatting, you might want to enhance this based on your data structure
    if (typeof content === "string") {
      return `<div class="azkar-text">${content}</div>`;
    }
    return content;
  }

  // Function to load prayer timings
  async function loadPrayerTimings() {
    try {
      document.getElementById("prayer-timings-body").innerHTML = `
                <tr>
                    <td colspan="6" class="text-center">
                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        Loading prayer timings...
                    </td>
                </tr>
            `;

      const response = await fetch("/praying-timings");
      if (!response.ok) {
        throw new Error("Network response was not ok");
      }
      const data = await response.json();
      loadingModal.hide(); // Ensure loading modal is hidden on error
      if (response.ok) {
        const timings = data;

        // Update main prayer table
        document.getElementById("prayer-timings-body").innerHTML = `
                    <tr>
                        <td>${timings.Fajr}</td>
                        <td>${timings.Sunrise}</td>
                        <td>${timings.Dhuhr}</td>
                        <td>${timings.Asr}</td>
                        <td>${timings.Maghrib}</td>
                        <td>${timings.Isha}</td>
                    </tr>
                `;

        // Update additional timings
        const additionalTimings = {
          Imsak: timings.Imsak,
          Midnight: timings.Midnight,
          "First Third": timings.Firstthird,
          "Last Third": timings.Lastthird,
        };

        const additionalHTML = Object.entries(additionalTimings)
          .map(
            ([name, time]) => `
                    <div class="col-6 col-md-3 mb-2">
                        <div class="card h-100">
                            <div class="card-body p-2 text-center">
                                <h6 class="card-subtitle text-muted">${name}</h6>
                                <p class="card-text fw-bold">${time}</p>
                            </div>
                        </div>
                    </div>
                `
          )
          .join("");

        document.getElementById("additional-timings-container").innerHTML = additionalHTML;
      } else {
        throw new Error(data.message || "Failed to load prayer timings");
      }
    } catch (error) {
      console.error("Error loading prayer timings:", error);
      document.getElementById("prayer-timings-body").innerHTML = `
                <tr>
                    <td colspan="6" class="text-center text-danger">
                        Failed to load prayer timings. Please try again.
                    </td>
                </tr>
            `;
    }
  }
</script>
