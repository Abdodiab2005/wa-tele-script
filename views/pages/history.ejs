<div class="row">
  <div class="col-12">
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2>Message History</h2>
      <a href="/messages" class="btn btn-primary">Compose Message</a>
    </div>

    <!-- Message History Table -->
    <div class="card">
      <div class="card-body">
        <% if (messages && messages.length > 0) { %>
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead>
              <tr>
                <th>Date</th>
                <th>Content</th>
                <th>Platforms</th>
                <th>Channels</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              <% messages.forEach(message => { %>
              <tr>
                <td>
                  <% if (message.scheduledTime) { %>
                  <span class="badge bg-info">Scheduled</span><br />
                  <%= new Date(message.scheduledTime).toLocaleString() %> <% } else { %> <%= new
                  Date(message.createdAt).toLocaleString() %> <% } %>
                </td>
                <td>
                  <% if (message.content.length > 50) { %> <%= message.content.substring(0, 50) %>... <% } else { %> <%=
                  message.content %> <% } %>
                </td>
                <td>
                  <% message.platforms.forEach(platform => { %>
                  <span class="badge bg-secondary"><%= platform %></span>
                  <% }) %>
                </td>
                <td><%= message.channels.length %> channel(s)</td>
                <td>
                  <% if (message.status === 'pending') { %>
                  <span class="badge bg-warning">Pending</span>
                  <% } else if (message.status === 'sending') { %>
                  <span class="badge bg-info">Sending</span>
                  <% } else if (message.status === 'completed') { %>
                  <span class="badge bg-success">Completed</span>
                  <% } else { %>
                  <span class="badge bg-danger">Failed</span>
                  <% } %>
                </td>
                <td>
                  <button class="btn btn-sm btn-outline-info view-details-btn" data-message-id="<%= message._id %>">
                    View Details
                  </button>
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
        <% } else { %>
        <div class="alert alert-info">No messages found. Start by <a href="/messages">sending a message</a>.</div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<!-- Message Details Modal -->
<div class="modal fade" id="messageDetailsModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Message Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="message-details-content">
        <div class="d-flex justify-content-center">
          <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
  // Initialize Bootstrap modal
  const detailsModal = new bootstrap.Modal(document.getElementById("messageDetailsModal"));

  // Handle view details buttons
  document.querySelectorAll(".view-details-btn").forEach((button) => {
    button.addEventListener("click", async function () {
      const messageId = this.getAttribute("data-message-id");

      try {
        // Show loading state
        document.getElementById("message-details-content").innerHTML = `
                    <div class="d-flex justify-content-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                `;
        detailsModal.show();

        // Fetch message details
        const response = await fetch(`/history/${messageId}`);
        const data = await response.json();

        if (data.success) {
          const message = data.message;

          // Render message details
          document.getElementById("message-details-content").innerHTML = `
                        <div class="mb-3">
                            <h6>Message Content:</h6>
                            <div class="p-3 bg-light rounded">${message.content}</div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6>Platforms:</h6>
                                <p>${message.platforms
                                  .map((p) => `<span class="badge bg-secondary">${p}</span>`)
                                  .join(" ")}</p>
                            </div>
                            <div class="col-md-6">
                                <h6>Status:</h6>
                                <p>
                                    <span class="badge ${getBadgeClass(message.status)}">
                                        ${message.status}
                                    </span>
                                </p>
                            </div>
                        </div>
                        
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <h6>Created:</h6>
                                <p>${new Date(message.createdAt).toLocaleString()}</p>
                            </div>
                            <div class="col-md-6">
                                ${
                                  message.scheduledTime
                                    ? `<h6>Scheduled For:</h6>
                                     <p>${new Date(message.scheduledTime).toLocaleString()}</p>`
                                    : ""
                                }
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <h6>Channels:</h6>
                            <ul class="list-group">
                                ${message.channels
                                  .map(
                                    (channel) =>
                                      `<li class="list-group-item d-flex justify-content-between align-items-center">
                                        ${channel.name}
                                        <span class="badge bg-primary rounded-pill">${channel.platform}</span>
                                    </li>`
                                  )
                                  .join("")}
                            </ul>
                        </div>
                        
                        ${
                          message.results && message.results.length > 0
                            ? `
                            <h6>Delivery Results:</h6>
                            <div class="table-responsive">
                                <table class="table table-sm table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Channel</th>
                                            <th>Platform</th>
                                            <th>Status</th>
                                            <th>Timestamp</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        ${message.results
                                          .map(
                                            (result) => `
                                            <tr>
                                                <td>${result.channel || "-"}</td>
                                                <td>${result.platform || "-"}</td>
                                                <td>
                                                    <span class="badge ${
                                                      result.status === "success" ? "bg-success" : "bg-danger"
                                                    }">
                                                        ${result.status}
                                                    </span>
                                                </td>
                                                <td>${
                                                  result.timestamp ? new Date(result.timestamp).toLocaleString() : "-"
                                                }</td>
                                            </tr>
                                            ${
                                              result.error
                                                ? `
                                                <tr>
                                                    <td colspan="4" class="text-danger">Error: ${result.error}</td>
                                                </tr>
                                            `
                                                : ""
                                            }
                                        `
                                          )
                                          .join("")}
                                    </tbody>
                                </table>
                            </div>
                        `
                            : ""
                        }
                    `;
        } else {
          document.getElementById("message-details-content").innerHTML = `
                        <div class="alert alert-danger">
                            Failed to load message details: ${data.message}
                        </div>
                    `;
        }
      } catch (error) {
        console.error("Error loading message details:", error);
        document.getElementById("message-details-content").innerHTML = `
                    <div class="alert alert-danger">
                        Error loading message details. Please try again.
                    </div>
                `;
      }
    });
  });

  // Helper function to get badge class based on status
  function getBadgeClass(status) {
    switch (status) {
      case "pending":
        return "bg-warning";
      case "sending":
        return "bg-info";
      case "completed":
        return "bg-success";
      case "failed":
        return "bg-danger";
      default:
        return "bg-secondary";
    }
  }
</script>
